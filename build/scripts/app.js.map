{"version":3,"sources":["app/app.js","app/lapTimes/lapTime.js","app/lapTimes/lapTimeListCtrl.js","app/sessions/sessionDetailCtrl.js","app/sessions/sessionListCtrl.js","app/sessions/sessionUserCtrl.js","app/sessions/sessions.js","app/common/services/common.services.js","app/common/services/dataAccessService.js","app/common/services/lapTimeResourceMock.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["var app;\n(function (app) {\n    var main = angular.module(\"lapTimeManagement\", [\"ngRoute\", \"common.services\"]);\n    main.config(routeConfig);\n    /*@ngInject*/\n    function routeConfig($routeProvider) {\n        $routeProvider\n            .when(\"/lapTimeList/:sessionId\", {\n            templateUrl: \"/app/lapTimes/lapTimeListView.html\",\n            controller: \"LapTimeListCtrl as vm\"\n        })\n            .when(\"/sessions/:sessionId\", {\n            templateUrl: \"/app/sessions/sessionDetailView.html\",\n            controller: \"SessionDetailCtrl as vm\"\n        })\n            .when(\"/sessions/:sessionId/user/:userId\", {\n            templateUrl: \"/app/sessions/sessionUserView.html\",\n            controller: \"SessionUserCtrl as vm\"\n        })\n            .when(\"/sessions\", {\n            templateUrl: \"/app/sessions/sessionListView.html\",\n            controller: \"SessionListCtrl as vm\"\n        })\n            .otherwise(\"/sessions\");\n    }\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var domain;\n    (function (domain) {\n        var LapTime = (function () {\n            function LapTime(session_id, lap_time, date_time, split1, user_id, split2, fastest) {\n                this.session_id = session_id;\n                this.lap_time = lap_time;\n                this.date_time = date_time;\n                this.split1 = split1;\n                this.user_id = user_id;\n                this.split2 = split2;\n                this.fastest = fastest;\n            }\n            return LapTime;\n        })();\n        domain.LapTime = LapTime;\n    })(domain = app.domain || (app.domain = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var userList;\n    (function (userList) {\n        var LapTimeListCtrl = (function () {\n            /*@ngInject*/\n            function LapTimeListCtrl($routeParams, dataAccessService) {\n                var _this = this;\n                this.$routeParams = $routeParams;\n                this.dataAccessService = dataAccessService;\n                this.title = \"Lap Time List\";\n                this.lapTimes = [];\n                var sessionId = $routeParams.sessionId;\n                var lapTimeResource = dataAccessService.getLapTimeResource();\n                lapTimeResource.query({ sessionId: sessionId }, function (data) {\n                    _this.lapTimes = data;\n                });\n            }\n            return LapTimeListCtrl;\n        })();\n        angular\n            .module(\"lapTimeManagement\")\n            .controller(\"LapTimeListCtrl\", LapTimeListCtrl);\n    })(userList = app.userList || (app.userList = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var sessions;\n    (function (sessions) {\n        var SessionDetailCtrl = (function () {\n            /*@ngInject*/\n            function SessionDetailCtrl($routeParams, dataAccessService) {\n                var _this = this;\n                this.$routeParams = $routeParams;\n                this.dataAccessService = dataAccessService;\n                this.title = \"Lap Time List\";\n                var sessionId = $routeParams.sessionId;\n                var sessionResource = dataAccessService.getSessionListResource();\n                sessionResource.get({ sessionId: sessionId }, function (data) {\n                    _.min(data.laptimes, 'lap_time').fastest = true;\n                    _this.session = data;\n                });\n            }\n            return SessionDetailCtrl;\n        })();\n        angular\n            .module(\"lapTimeManagement\")\n            .controller(\"SessionDetailCtrl\", SessionDetailCtrl);\n    })(sessions = app.sessions || (app.sessions = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var sessions;\n    (function (sessions) {\n        var SessionListCtrl = (function () {\n            /*@ngInject*/\n            function SessionListCtrl(dataAccessService) {\n                var _this = this;\n                this.dataAccessService = dataAccessService;\n                this.title = \"Session List\";\n                this.sessions = [];\n                var sessionResource = dataAccessService.getSessionListResource();\n                sessionResource.query(function (data) {\n                    _this.sessions = data;\n                });\n            }\n            return SessionListCtrl;\n        })();\n        angular\n            .module(\"lapTimeManagement\")\n            .controller(\"SessionListCtrl\", SessionListCtrl);\n    })(sessions = app.sessions || (app.sessions = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var sessions;\n    (function (sessions) {\n        var SessionUserCtrl = (function () {\n            /*@ngInject*/\n            function SessionUserCtrl($routeParams, dataAccessService) {\n                var _this = this;\n                this.$routeParams = $routeParams;\n                this.dataAccessService = dataAccessService;\n                this.title = \"Lap Time List\";\n                var sessionId = $routeParams.sessionId;\n                var userId = $routeParams.userId;\n                var userSessionResource = dataAccessService.getUserSessionListResource();\n                userSessionResource.get({ sessionId: sessionId, userId: userId }, function (data) {\n                    _.min(data.laptimes, 'lap_time').fastest = true;\n                    _this.session = data;\n                    if (!_this.session.Id) {\n                        _this.session.Id = sessionId;\n                    }\n                });\n            }\n            return SessionUserCtrl;\n        })();\n        angular\n            .module(\"lapTimeManagement\")\n            .controller(\"SessionUserCtrl\", SessionUserCtrl);\n    })(sessions = app.sessions || (app.sessions = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var domain;\n    (function (domain) {\n        var Session = (function () {\n            function Session(Id, car, track, userId, laptimes) {\n                this.Id = Id;\n                this.car = car;\n                this.track = track;\n                this.userId = userId;\n                this.laptimes = laptimes;\n            }\n            return Session;\n        })();\n        domain.Session = Session;\n    })(domain = app.domain || (app.domain = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var common;\n    (function (common) {\n        angular.module(\"common.services\", [\"ngResource\"]);\n    })(common = app.common || (app.common = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var common;\n    (function (common) {\n        var DataAccessService = (function () {\n            /*@ngInject*/\n            function DataAccessService($resource) {\n                this.$resource = $resource;\n            }\n            DataAccessService.prototype.getLapTimeResource = function () {\n                return this.$resource(\"https://t1nj5fds0c.execute-api.ap-northeast-1.amazonaws.com/develop/laptimes/:sessionId\");\n            };\n            DataAccessService.prototype.getSessionListResource = function () {\n                return this.$resource(\"https://t1nj5fds0c.execute-api.ap-northeast-1.amazonaws.com/develop/session/:sessionId\");\n            };\n            DataAccessService.prototype.getUserSessionListResource = function () {\n                return this.$resource(\"https://t1nj5fds0c.execute-api.ap-northeast-1.amazonaws.com/develop/session/:sessionId/user/:userId\");\n            };\n            return DataAccessService;\n        })();\n        common.DataAccessService = DataAccessService;\n        angular\n            .module(\"common.services\")\n            .service(\"dataAccessService\", DataAccessService);\n    })(common = app.common || (app.common = {}));\n})(app || (app = {}));\n","var app;\n(function (app) {\n    var common;\n    (function (common) {\n        var mockResource = angular\n            .module(\"lapTimeResourceMock\", [\"ngMockE2E\"]);\n        mockResource.run(mockRun);\n        mockRun.$inject = [\"$httpBackend\"];\n        function mockRun($httpBackend) {\n            var lapTimes = [];\n            var lapTime;\n            // lapTime = new app.domain.LapTime(\"ap\", \"Anthony\", \"Pasquale\");\n            // lapTimes.push(lapTime);\n            // lapTime = new app.domain.LapTime(\"test1\", \"Test\", \"User 1\");\n            // lapTimes.push(lapTime);\n            // lapTime = new app.domain.LapTime(\"test2\", \"Test\", \"User 2\");\n            // lapTimes.push(lapTime);       \n            var lapTimeUrl = \"/api/users\";\n            $httpBackend.whenGET(lapTimeUrl).respond(lapTimes);\n            var editingRegex = new RegExp(lapTimeUrl + \"/\\w*\", '');\n            $httpBackend.whenGET(editingRegex).respond(function (method, url, data) {\n                var user = { \"userName\": \"\" };\n                var parameters = url.split('/');\n                var length = parameters.length;\n                var userName = parameters[length - 1];\n                return [200, user, {}];\n            });\n            // Catch all for testing purposes\n            $httpBackend.whenGET(/api/).respond(function (method, url, data) {\n                return [200, lapTimes, {}];\n            });\n            // Pass through any requests for application files\n            $httpBackend.whenGET(/app/).passThrough();\n        }\n    })(common = app.common || (app.common = {}));\n})(app || (app = {}));\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/common/services/lapTimeResourceMock.js"],"names":[],"mappings":"AAAA,IAAI;AACJ,CAAC,UAAU,KAAK;IACZ,IAAI;IACJ,CAAC,UAAU,QAAQ;QACf,IAAI,eAAe;aACd,OAAO,uBAAuB,CAAC;QACpC,aAAa,IAAI;QACjB,QAAQ,UAAU,CAAC;QACnB,SAAS,QAAQ,cAAc;YAC3B,IAAI,WAAW;YACf,IAAI;;;;;;;YAOJ,IAAI,aAAa;YACjB,aAAa,QAAQ,YAAY,QAAQ;YACzC,IAAI,eAAe,IAAI,OAAO,aAAa,QAAQ;YACnD,aAAa,QAAQ,cAAc,QAAQ,UAAU,QAAQ,KAAK,MAAM;gBACpE,IAAI,OAAO,EAAE,YAAY;gBACzB,IAAI,aAAa,IAAI,MAAM;gBAC3B,IAAI,SAAS,WAAW;gBACxB,IAAI,WAAW,WAAW,SAAS;gBACnC,OAAO,CAAC,KAAK,MAAM;;;YAGvB,aAAa,QAAQ,OAAO,QAAQ,UAAU,QAAQ,KAAK,MAAM;gBAC7D,OAAO,CAAC,KAAK,UAAU;;;YAG3B,aAAa,QAAQ,OAAO;;OAEjC,SAAS,IAAI,WAAW,IAAI,SAAS;GACzC,QAAQ,MAAM;AACjB","file":"app/common/services/lapTimeResourceMock.js","sourcesContent":["var app;\n(function (app) {\n    var common;\n    (function (common) {\n        var mockResource = angular\n            .module(\"lapTimeResourceMock\", [\"ngMockE2E\"]);\n        mockResource.run(mockRun);\n        mockRun.$inject = [\"$httpBackend\"];\n        function mockRun($httpBackend) {\n            var lapTimes = [];\n            var lapTime;\n            // lapTime = new app.domain.LapTime(\"ap\", \"Anthony\", \"Pasquale\");\n            // lapTimes.push(lapTime);\n            // lapTime = new app.domain.LapTime(\"test1\", \"Test\", \"User 1\");\n            // lapTimes.push(lapTime);\n            // lapTime = new app.domain.LapTime(\"test2\", \"Test\", \"User 2\");\n            // lapTimes.push(lapTime);       \n            var lapTimeUrl = \"/api/users\";\n            $httpBackend.whenGET(lapTimeUrl).respond(lapTimes);\n            var editingRegex = new RegExp(lapTimeUrl + \"/\\w*\", '');\n            $httpBackend.whenGET(editingRegex).respond(function (method, url, data) {\n                var user = { \"userName\": \"\" };\n                var parameters = url.split('/');\n                var length = parameters.length;\n                var userName = parameters[length - 1];\n                return [200, user, {}];\n            });\n            // Catch all for testing purposes\n            $httpBackend.whenGET(/api/).respond(function (method, url, data) {\n                return [200, lapTimes, {}];\n            });\n            // Pass through any requests for application files\n            $httpBackend.whenGET(/app/).passThrough();\n        }\n    })(common = app.common || (app.common = {}));\n})(app || (app = {}));\n"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/common/services/sessionResourceMock.js"],"names":[],"mappings":"AAAA,IAAI;AACJ,CAAC,UAAU,KAAK;IACZ,IAAI;IACJ,CAAC,UAAU,QAAQ;QACf,IAAI,eAAe;aACd,OAAO,uBAAuB,CAAC;QACpC,aAAa,IAAI;QACjB,QAAQ,UAAU,CAAC;QACnB,SAAS,QAAQ,cAAc;YAC3B,IAAI,WAAW;YACf,IAAI;YACJ,UAAU,IAAI,IAAI,OAAO,QAAQ,GAAG,eAAe,cAAc,GAAG;YACpE,SAAS,KAAK;YACd,UAAU,IAAI,IAAI,OAAO,QAAQ,GAAG,eAAe,cAAc,GAAG;YACpE,SAAS,KAAK;YACd,UAAU,IAAI,IAAI,OAAO,QAAQ,GAAG,aAAa,eAAe,GAAG;YACnE,SAAS,KAAK;YACd,IAAI,aAAa;YACjB,aAAa,QAAQ,YAAY,QAAQ;YACzC,IAAI,eAAe,IAAI,OAAO,aAAa,QAAQ;YACnD,aAAa,QAAQ,cAAc,QAAQ,UAAU,QAAQ,KAAK,MAAM;gBACpE,IAAI,OAAO,EAAE,WAAW;gBACxB,IAAI,aAAa,IAAI,MAAM;gBAC3B,IAAI,SAAS,WAAW;gBACxB,IAAI,YAAY,WAAW,SAAS;gBACpC,OAAO,CAAC,KAAK,SAAS;;;YAG1B,aAAa,QAAQ,OAAO,QAAQ,UAAU,QAAQ,KAAK,MAAM;gBAC7D,OAAO,CAAC,KAAK,SAAS;;;YAG1B,aAAa,QAAQ,OAAO;;QAEhC;aACK,OAAO,uBAAuB,CAAC;OACrC,SAAS,IAAI,WAAW,IAAI,SAAS;GACzC,QAAQ,MAAM;AACjB","file":"app/common/services/sessionResourceMock.js","sourcesContent":["var app;\n(function (app) {\n    var common;\n    (function (common) {\n        var mockResource = angular\n            .module(\"sessionResourceMock\", [\"ngMock\"]);\n        mockResource.run(mockRun);\n        mockRun.$inject = [\"$httpBackend\"];\n        function mockRun($httpBackend) {\n            var sessions = [];\n            var session;\n            session = new app.domain.Session(1, \"Big Red Car\", \"Long Track\", 1, []);\n            sessions.push(session);\n            session = new app.domain.Session(1, \"Big Red Car\", \"Long Track\", 2, []);\n            sessions.push(session);\n            session = new app.domain.Session(2, \"Batmobile\", \"Short Track\", 1, []);\n            sessions.push(session);\n            var sessionUrl = \"https://t1nj5fds0c.execute-api.ap-northeast-1.amazonaws.com/develop/session\";\n            $httpBackend.whenGET(sessionUrl).respond(sessions);\n            var editingRegex = new RegExp(sessionUrl + \"/\\w*\", '');\n            $httpBackend.whenGET(editingRegex).respond(function (method, url, data) {\n                var user = { \"session\": \"\" };\n                var parameters = url.split('/');\n                var length = parameters.length;\n                var sessionId = parameters[length - 1];\n                return [200, session, {}];\n            });\n            // Catch all for testing purposes\n            $httpBackend.whenGET(/api/).respond(function (method, url, data) {\n                return [200, session, {}];\n            });\n            // Pass through any requests for application files\n            $httpBackend.whenGET(/app/).passThrough();\n        }\n        angular\n            .module(\"sessionResourceMock\", [\"ngMock\"]);\n    })(common = app.common || (app.common = {}));\n})(app || (app = {}));\n"],"sourceRoot":"/source/"}
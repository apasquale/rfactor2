{"version":3,"sources":["test/unit/controllers/SessionListCtrlTest.js"],"names":[],"mappings":"AAAA,SAAS,uBAAuB,YAAY;IACxC,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,WAAW,QAAQ,KAAK,OAAO;IAC/B,WAAW,YAAY;QACnB,QAAQ,KAAK,OAAO,UAAU,eAAe,gBAAgB,mBAAmB;YAC5E,eAAe;YACf,cAAc;YACd,cAAc;;;IAGtB,UAAU,YAAY;QAClB,aAAa;QACb,aAAa;;IAEjB,GAAG,+BAA+B,YAAY;QAC1C,OAAO,aAAa;;IAExB,SAAS,uBAAuB,YAAY;QACxC,IAAI,OAAO;QACX,IAAI,WAAW;QACf,IAAI;QACJ,UAAU,IAAI,IAAI,OAAO,QAAQ,GAAG,eAAe,cAAc,GAAG;QACpE,SAAS,KAAK;QACd,UAAU,IAAI,IAAI,OAAO,QAAQ,GAAG,eAAe,cAAc,GAAG;QACpE,SAAS,KAAK;QACd,UAAU,IAAI,IAAI,OAAO,QAAQ,GAAG,aAAa,eAAe,GAAG;QACnE,SAAS,KAAK;QACd,WAAW,YAAY;YACnB,QAAQ;YACR,aAAa,YAAY,mBAAmB,EAAE,QAAQ,OAAO,mBAAmB;YAChF,aAAa,UAAU,+EAA+E,QAAQ;;QAElH,GAAG,iCAAiC,YAAY;YAC5C,aAAa;YACb,OAAO,WAAW,UAAU;;QAEhC,GAAG,iDAAiD,YAAY;YAC5D,aAAa;YACb,OAAO,WAAW,SAAS,QAAQ,KAAK;;QAE5C,GAAG,uCAAuC,YAAY;YAClD,aAAa;YACb,IAAI,eAAe,KAAK,UAAU,WAAW;YAC7C,IAAI,iBAAiB,KAAK,UAAU;YACpC,OAAO,cAAc,KAAK;;;;AAItC","file":"test/unit/controllers/SessionListCtrlTest.js","sourcesContent":["describe(\"SessionListCtrlTest\", function () {\n    var $httpBackend;\n    var $controller;\n    var dataService;\n    beforeEach(angular.mock.module('lapTimeManagement'));\n    beforeEach(function () {\n        angular.mock.inject(function (_$controller_, _$httpBackend_, dataAccessService) {\n            $httpBackend = _$httpBackend_;\n            $controller = _$controller_;\n            dataService = dataAccessService;\n        });\n    });\n    afterEach(function () {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n    });\n    it(\"should initialize correctly\", function () {\n        expect(dataService).toBeDefined();\n    });\n    describe(\"Controller sessions\", function () {\n        var scope, controller;\n        var sessions = [];\n        var session;\n        session = new app.domain.Session(1, \"Big Red Car\", \"Long Track\", 1, []);\n        sessions.push(session);\n        session = new app.domain.Session(1, \"Big Red Car\", \"Long Track\", 2, []);\n        sessions.push(session);\n        session = new app.domain.Session(2, \"Batmobile\", \"Short Track\", 1, []);\n        sessions.push(session);\n        beforeEach(function () {\n            scope = {};\n            controller = $controller(\"SessionListCtrl\", { $scope: scope, dataAccessService: dataService });\n            $httpBackend.expectGET(\"https://t1nj5fds0c.execute-api.ap-northeast-1.amazonaws.com/develop/session\").respond(sessions);\n        });\n        it('sessions has been initialized', function () {\n            $httpBackend.flush();\n            expect(controller.sessions).toBeDefined();\n        });\n        it('should contain the correct number of sessions', function () {\n            $httpBackend.flush();\n            expect(controller.sessions.length).toBe(3);\n        });\n        it('should contain the correct sessions', function () {\n            $httpBackend.flush();\n            var actualString = JSON.stringify(controller.sessions);\n            var expectedString = JSON.stringify(sessions);\n            expect(actualString).toBe(expectedString);\n        });\n    });\n});\n"],"sourceRoot":"/source/"}